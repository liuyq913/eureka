apply plugin: 'nebula.test-jar'
apply plugin: 'nebula.provided-base'

configurations.all {
    // jersey2
    exclude group: 'org.glassfish.jersey'
}

dependencies {
    compile "com.netflix.netflix-commons:netflix-eventbus:0.3.0"
    compile 'com.thoughtworks.xstream:xstream:1.4.10'
    compile "com.netflix.archaius:archaius-core:0.7.6"
    compile 'javax.ws.rs:jsr311-api:1.1.1'
    compile "com.netflix.servo:servo-core:0.12.21"
    compile "com.sun.jersey:jersey-core:1.19.1"
    compile "com.sun.jersey:jersey-client:1.19.1"
    compile "com.sun.jersey.contribs:jersey-apache-client4:${jerseyVersion}"
    compile "org.apache.httpcomponents:httpclient:${apacheHttpClientVersion}"
    compile "com.google.inject:guice:4.1.0"

    compile "com.github.vlsi.compactmap:compactmap:1.2.1"
    
    compile "com.fasterxml.jackson.core:jackson-annotations:2.9.4"
    compile "com.fasterxml.jackson.core:jackson-core:2.9.4"
    compile "com.fasterxml.jackson.core:jackson-databind:2.9.4"

    // Eureka client uses JSON encoding by default
    provided "com.fasterxml.jackson.dataformat:jackson-dataformat-xml:2.9.4"
    // Prefered jackson Stax serializer. Default Oracle has issues (adds empty namespace) and is slower
    provided "org.codehaus.woodstox:woodstox-core-asl:${woodstoxVersion}"

    runtime "org.codehaus.jettison:jettison:${jettisonVersion}"

    testCompile project(':eureka-test-utils')
    testCompile "junit:junit:${junit_version}"
    testCompile 'org.mortbay.jetty:jetty:6.1H.22'
    testCompile "org.mockito:mockito-core:${mockitoVersion}"
    testCompile "org.mock-server:mockserver-netty:${mockserverVersion}"
    testCompile "com.netflix.governator:governator:${governatorVersion}"
}
